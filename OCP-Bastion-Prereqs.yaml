---
- name: Download "oc"
  get_url:
    url: "{{ oc_url }}"
    dest: "{{ cluster_dir }}"

- name: Download "openshift-install"
  get_url:
    url: "{{ openshift_install_url }}"
    dest: "{{ cli_install_dir }}"

- name: Extract "oc" to {{ cli_install_dir }}
  ansible.builtin.unarchive:
    src: "/tmp/ocp/openshift-client-linux-{{ ocp_z }}.tar.gz"
    dest: "{{ cli_install_dir }}"
    remote_src: yes

- name: Extract "openshift-install" to {{ cli_install_dir }}
  ansible.builtin.unarchive:
    src: "/tmp/ocp/openshift-install-linux-{{ ocp_z }}.tar.gz"
    dest: "{{ cli_install_dir }}"

- name: Download RHCOS rootfs
  get_url:
    url: "{{ rhcos_rootfs_url }}"
    dest: "{{ images_directory }}"

- name: Download RHCOS kernel
  get_url:
    url: "{{ rhcos_kernel_url }}"
    dest: "{{ images_directory }}" 

- name: Download RHCOS initramfs
  get_url:
    url: "{{ rhcos_initramfs_url }}"
    dest: "{{ images_directory }}" 

- name: Download bootstrap PXE Boot file
  get_url:
    url: "{{ ocp_git_repo }}/{{ bootstrap_mac }}"
    dest: "{{ tftp_dir }}" 

- name: Download master01 Master 1 boot file
  get_url:
    url: "{{ ocp_git_repo }}/{{ master_1_mac }}"
    dest: "{{ tftp_dir }}" 

- name: Download master01 Master 2 boot file
  get_url:
    url: "{{ ocp_git_repo }}/{{ master_2_mac }}"
    dest: "{{ tftp_dir }}" 

- name: Download master01 Master 3 boot file
  get_url:
    url: "{{ ocp_git_repo }}/{{ master_3_mac }}"
    dest: "{{ tftp_dir }}" 

- name: Configure haproxy.cfg file
  ansible.builtin.copy:
    src: haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: "0644"
    
##TODO UPI - Get HAProxy cfg file
- name: Reload HAProxy service
  ansible.builtin.systemd:
    name: haproxy
    state: reloaded

- name: Create the OpenShift installation directory if it does not exist
  ansible.builtin.file:
    path: "{{ ocp_upi_dir }}"
    state: directory
    owner: lab
    group: lab
    mode: "0755"

- name: Create custom install-config.yaml file
  ansible.builtin.copy:
    src: install-config.yaml
    dest: "{{ ocp_upi_dir }}/install-config.yaml"
    owner: lab
    group: lab
    mode: "0644"

##TODO IPI - Get certs for VCenter and apply to host